# Generated by Django 5.1.6 on 2025-03-28 11:54

from django.db import migrations, models
import secrets

def generate_api_keys(apps, schema_editor):
    Cluster = apps.get_model('solsub', 'Cluster')
    for cluster in Cluster.objects.all():
        if not cluster.api_key:  # Only generate if api_key is empty or null
            while True:
                key = secrets.token_hex(16)  # 32-character hex string
                if not Cluster.objects.filter(api_key=key).exists():
                    cluster.api_key = key
                    cluster.save()
                    break

class Migration(migrations.Migration):

    dependencies = [
        ('solsub', '0001_initial'),
    ]

    operations = [
        # Step 1: Add api_key as nullable field (no unique constraint yet)
        migrations.AddField(
            model_name='cluster',
            name='api_key',
            field=models.CharField(
                max_length=32,
                null=True,  # Allow null initially
                blank=True,
            ),
        ),
        # Step 2: Populate api_key with unique values
        migrations.RunPython(
            generate_api_keys,
            reverse_code=migrations.RunPython.noop,  # No-op for reverse
        ),
        # Step 3: Alter api_key to enforce unique=True and remove null=True
        migrations.AlterField(
            model_name='cluster',
            name='api_key',
            field=models.CharField(
                max_length=32,
                unique=True,
                blank=True,  # Still allow blank, but enforce uniqueness
            ),
        ),
        # Step 4: Alter cluster_name field (original operation)
        migrations.AlterField(
            model_name='cluster',
            name='cluster_name',
            field=models.CharField(max_length=255, unique=True),
        ),
    ]